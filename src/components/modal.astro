---
interface Props {
	type: 'error' | 'success' | 'information' | 'warning';
	noCloseButton?: boolean;
	id: string;
}

import '../styles/global.scss';

const { type, id, noCloseButton } = Astro.props;

let modalAccent = '';
switch (type) {
	case 'error':
		modalAccent = '#b93f49';
		break;

	case 'success':
		modalAccent = '#2ba972';
		break;

	default:
		break;
}
---

<div class:list={['details-modal', `${type}-modal`]} id={id}>
	{
		noCloseButton ? null : (
			<div class='details-modal-close'>
				<svg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 14 14' fill='none'>
					<path
						fill-rule='evenodd'
						clip-rule='evenodd'
						d='M13.7071 1.70711C14.0976 1.31658 14.0976 0.683417 13.7071 0.292893C13.3166 -0.0976311 12.6834 -0.0976311 12.2929 0.292893L7 5.58579L1.70711 0.292893C1.31658 -0.0976311 0.683417 -0.0976311 0.292893 0.292893C-0.0976311 0.683417 -0.0976311 1.31658 0.292893 1.70711L5.58579 7L0.292893 12.2929C-0.0976311 12.6834 -0.0976311 13.3166 0.292893 13.7071C0.683417 14.0976 1.31658 14.0976 1.70711 13.7071L7 8.41421L12.2929 13.7071C12.6834 14.0976 13.3166 14.0976 13.7071 13.7071C14.0976 13.3166 14.0976 12.6834 13.7071 12.2929L8.41421 7L13.7071 1.70711Z'
						fill='black'
					/>
				</svg>
			</div>
		)
	}
	<slot />
</div>

<script>
	import * as globalScript from '../scripts/global';
	const id = document.querySelector('.details-modal').getAttribute('id');

	if (document.querySelector('.details-modal-close')) {
		document.querySelector('.details-modal-close').addEventListener('click', event => {
			globalScript.hideModal(id);
		});
	}
	Array.from(document.querySelector('.details-modal-buttons').children)
		.find(button => button.classList.contains('modal-close'))
		.addEventListener('click', event => {
			globalScript.hideModal(id);
		});
</script>

<style lang='scss' is:global define:vars={{ modalAccent }}>
	.details-modal {
		background: var(--background-light);
		border-radius: 0.5em;
		box-shadow: 0 10px 20px rgba(black, 0.2);
		left: 50%;
		max-width: 90%;
		pointer-events: all;
		position: fixed;
		top: 50%;
		transform: translate(-50%, -50%);
		width: 30em;
		text-align: left;
		max-height: 90vh;
		display: none;
		opacity: 0;
		flex-direction: column;
		z-index: 2000;
		transition: 0.3s ease-out;

		&.open {
			opacity: 1;
		}

		.details-modal-close {
			align-items: center;
			display: flex;
			height: 80px;
			justify-content: center;
			pointer-events: all;
			position: absolute;
			right: 0;
			top: 0;
			padding: 0 28px;
			cursor: pointer;

			svg {
				display: block;
				filter: invert(87%) sepia(0%) saturate(0%) hue-rotate(202deg) brightness(96%) contrast(93%);
			}
		}

		.details-modal-title {
			padding: 1.5em 0 1.5em 2em;
			pointer-events: all;
			position: relative;
			width: calc(100% - calc(4.65em + 28px));

			h1 {
				font-size: 1.65rem;
				font-weight: 600;
				line-height: normal;
				color: var(--modalAccent);
			}
		}

		.details-modal-content {
			border-top: 1px solid var(--colour-grey);
			padding: 2em;
			pointer-events: all;
			overflow: auto;
			font-size: 18px;
		}

		.details-modal-buttons {
			display: flex;
			align-items: center;
			justify-content: center;
			width: 100%;
			padding: 16px 0;
		}
	}
</style>
